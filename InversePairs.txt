／／逆序对
public class Solution {
    private int cnt=0;
    public int InversePairs(int [] array) {
        if(array==null||array.length==0)
            return 0;
        Mergesort(array,0,array.length-1);
        return cnt;
    }
    void Mergesort(int[] array,int start,int end){
        if(start<end){
            int mid=(start+end)/2;
            Mergesort(array,start,mid);
            Mergesort(array,mid+1,end);
            Merge(array,start,mid,end);
        }
        
    }
    void Merge(int[] array,int p,int r,int q){
        if(p<q){
            int[] left=new int[r-p+1];
            int[] right=new int[q-r];
            for(int k=0,i=p;i<=r;i++,k++)
                left[k]=array[i];
            for(int k=0,i=r+1;i<=q;i++,k++)
                right[k]=array[i];
            int i,j,k;
            for(i=0,j=0,k=p;i<=r-p&&j<=q-r-1;){
                if(left[i]<=right[j]){
                    array[k++]=left[i++];
                }else{
                    cnt+=r-p+1-i;
                    array[k++]=right[j++]; 
                }
            }
            while(i<=r-p){
                array[k++]=left[i++];
            }
            while(j<=q-r-1){
                array[k++]=right[j++];
            }
        }
    }
    
}